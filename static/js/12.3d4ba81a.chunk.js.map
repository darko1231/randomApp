{"version":3,"sources":["components/SortedByComp/SortedByComp.js","containers/SortedBy/SortedBy.js","components/ClickedActorComp/Paginate/Paginate.js"],"names":["SortedByComp","props","react_default","a","createElement","axxx","className","classes","SortedByDetail","onClick","clicked","key","id","style","background","concat","image","backgroundPosition","backgroundSize","backgroundRepeat","index_esm","realicon","sale","sortedHeaderc","spanc","name","SortedBy","state","sorted","totalResults","currentPage","clickedMovie","_this","history","push","nextProps","nextState","onSorted","daki","this","actionSearch","horrorSearch","pageNumber","_this2","scroll","scrollTo","smooth","duration","setTimeout","setState","_this3","numberPages","Math","floor","behind","hed","titleChange","map","el","components_SortedByComp_SortedByComp","hd","title","imageCreate","Paginate","pag","pages","nextPage","bind","Component","connect","loading","error","dispatch","genreId","action","withRouter","React","memo","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Paginate_css__WEBPACK_IMPORTED_MODULE_1__","_Paginate_css__WEBPACK_IMPORTED_MODULE_1___default","pagination","pageLinks","_loop","i","active","selected","paginationitem","href","paginationlink","paginationcontainer","data-wow-duration"],"mappings":"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","file":"static/js/12.3d4ba81a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classes from \"./SortedByComp.css\";\r\nimport Aux from \"../../hoc/axxx\";\r\nimport { IoIosPlay } from \"react-icons/io\";\r\n//Creation of sorted movie component which has props as parameter and which will be reused in Sorted Container including its onClick function. Inline style of this component has been added including url of an image\r\nconst SortedByComp = (props) => {\r\n  return (\r\n    <Aux>\r\n      <div className={classes.SortedByComp}>\r\n        <div\r\n          className={classes.SortedByDetail}\r\n          onClick={props.clicked}\r\n          key={props.id}\r\n          style={{\r\n            background: ` linear-gradient(20deg, rgba(0, 0, 0, 0.6) 60%, rgba(0, 0, 0, 0) 70%) no-repeat center bottom , url(${props.image})`,\r\n            backgroundPosition: \"center\",\r\n            backgroundSize: \"cover\",\r\n            backgroundRepeat: \"no-repeat\",\r\n          }}\r\n        >\r\n          <IoIosPlay className={classes.realicon} />\r\n        </div>\r\n        <span className={classes.sale}>HD</span>\r\n        <h3 className={classes.sortedHeaderc}>\r\n          <span className={classes.spanc}>{props.name}</span>\r\n        </h3>\r\n      </div>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default SortedByComp;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./SortedBy.css\";\r\nimport SortedByComp from \"../../components/SortedByComp/SortedByComp\";\r\nimport * as action from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport Paginate from \"../../components/ClickedActorComp/Paginate/Paginate\";\r\nimport { withRouter } from \"react-router\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nclass SortedBy extends Component {\r\n  //Creation of initial state that includes number of total results, current page and name of a genre of a movie\r\n  state = {\r\n    sorted: [\r\n      {\r\n        name: \"Action\",\r\n      },\r\n    ],\r\n    totalResults: 5065,\r\n    currentPage: 1,\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (\r\n      nextProps.onSorted !== nextState.onSorted &&\r\n      nextProps.sorted !== nextState.sorted &&\r\n      nextProps.daki !== nextState.daki\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  //When component is rendered, depending on passed value in daki props function will be invoked and data will be fetched based on genre\r\n  componentDidMount() {\r\n    if (this.props.daki === \"action\") {\r\n      this.actionSearch();\r\n    } else if (this.props.daki === \"horror\") {\r\n      this.horrorSearch();\r\n    } else if (this.props.daki === \"comedy\") {\r\n      this.props.onSorted(1, 35);\r\n    } else if (this.props.daki === \"crime\") {\r\n      this.props.onSorted(1, 80);\r\n    } else if (this.props.daki === \"fantasy\") {\r\n      this.props.onSorted(1, 10751);\r\n    } else if (this.props.daki === \"romance\") {\r\n      this.props.onSorted(1, 10749);\r\n    } else if (this.props.daki === \"adventure\") {\r\n      this.props.onSorted(1, 12);\r\n    } else if (this.props.daki === \"drama\") {\r\n      this.props.onSorted(1, 18);\r\n    }\r\n  }\r\n  //Function that invokes fetching of action movies based on Genre ID and page number\r\n  actionSearch() {\r\n    this.props.onSorted(1, 28);\r\n  }\r\n  //Function that invokes fetching of horror movies based on Genre ID and page number\r\n\r\n  horrorSearch() {\r\n    this.props.onSorted(1, 27);\r\n  }\r\n  //When clicking on next page, small scroll animation happens and depending on passed props genre, function will be invoked and data will be fetched\r\n  nextPage(pageNumber) {\r\n    scroll.scrollTo(-2000, { smooth: true, duration: 700 });\r\n\r\n    setTimeout(() => {\r\n      if (this.props.daki === \"action\") {\r\n        this.props.onSorted(pageNumber, 28);\r\n      } else if (this.props.daki === \"horror\") {\r\n        this.props.onSorted(pageNumber, 27);\r\n      } else if (this.props.daki === \"comedy\") {\r\n        this.props.onSorted(pageNumber, 35);\r\n      } else if (this.props.daki === \"crime\") {\r\n        this.props.onSorted(pageNumber, 80);\r\n      } else if (this.props.daki === \"fantasy\") {\r\n        this.props.onSorted(pageNumber, 10751);\r\n      } else if (this.props.daki === \"romance\") {\r\n        this.props.onSorted(pageNumber, 10749);\r\n      } else if (this.props.daki === \"adventure\") {\r\n        this.props.onSorted(pageNumber, 12);\r\n      } else if (this.props.daki === \"drama\") {\r\n        this.props.onSorted(pageNumber, 18);\r\n      }\r\n    }, 700);\r\n\r\n    this.setState({ currentPage: pageNumber });\r\n  }\r\n  //Function that returns name of a genre selected as a future heading\r\n  titleChange() {\r\n    if (this.props.daki === \"horror\") {\r\n      return \"Horror\";\r\n    } else if (this.props.daki === \"action\") {\r\n      return \"Action\";\r\n    } else if (this.props.daki === \"comedy\") {\r\n      return \"Comedy\";\r\n    } else if (this.props.daki === \"crime\") {\r\n      return \"Crime\";\r\n    } else if (this.props.daki === \"fantasy\") {\r\n      return \"Fantasy\";\r\n    } else if (this.props.daki === \"romance\") {\r\n      return \"Romance\";\r\n    } else if (this.props.daki === \"adventure\") {\r\n      return \"Adventure\";\r\n    } else if (this.props.daki === \"drama\") {\r\n      return \"Drama\";\r\n    }\r\n  }\r\n  //Once movie has been clicked, new URL location shows based on movie ID\r\n  clickedMovie = (id) => {\r\n    this.props.history.push(\"/movie/\" + id);\r\n  };\r\n\r\n  render() {\r\n    const numberPages = Math.floor(140 / 16);\r\n\r\n    return (\r\n      <div className={classes.behind} key={this.props.id}>\r\n        <h2 className={classes.hed}>{this.titleChange()}</h2>\r\n        <div className={classes.SortedBy}>\r\n          {this.props.sorted.map((el) => {\r\n            return (\r\n              <SortedByComp\r\n                key={el.id}\r\n                clicked={() => this.clickedMovie(el.id)}\r\n                id={el.id}\r\n                hd={el.hd}\r\n                name={el.title}\r\n                image={el.imageCreate}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        {this.state.totalResults > 16 ? (\r\n          <Paginate\r\n            className={classes.pag}\r\n            pages={numberPages}\r\n            nextPage={this.nextPage.bind(this)}\r\n            currentPage={this.state.currentPage}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//Passed state that includes sorted movies, loading phase and error handler\r\nconst mapWithProps = (state) => {\r\n  return {\r\n    sorted: state.sorted.sorted,\r\n    loading: state.sorted.loading,\r\n    error: state.sorted.error,\r\n  };\r\n};\r\n//Dispatch function that is passed as a function which fetches movies based on clicked genre and number of page\r\nconst mapWithPropsDispatch = (dispatch) => {\r\n  return {\r\n    onSorted: (pageNumber, genreId) =>\r\n      dispatch(action.SORTED_FETCH(pageNumber, genreId)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapWithProps,\r\n  mapWithPropsDispatch\r\n)(withRouter(React.memo(SortedBy), []));\r\n","import React from \"react\";\r\nimport classes from \"./Paginate.css\";\r\n\r\n//Creation of reusable Pagination component which will be used pages where there is a need for large fetched data\r\nconst pagination = (props) => {\r\n  const pageLinks = [];\r\n\r\n  //Looping through passed number of pages, starting from 1 and incrementing by 1 after each loop\r\n  for (let i = 1; i <= props.pages + 1; i++) {\r\n    let active = props.currentPage === i ? `${classes.selected}` : \"\";\r\n\r\n    //Creation of li tag with passed data to create numbers of pagination\r\n    pageLinks.push(\r\n      <li key={i} className={`${classes.paginationitem} ${active}`}>\r\n        <a href={() => false} onClick={() => props.nextPage(i)} className={classes.paginationlink}>\r\n          {i}\r\n        </a>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.paginationcontainer} data-wow-duration=\"0.5s\">\r\n      <ul className={classes.pagination}>\r\n        {props.currentPage > 1 ? (\r\n          <li\r\n            className={classes.paginationitem}\r\n            onClick={() => props.nextPage(props.currentPage - 1)}\r\n          >\r\n            <a href={() => false} className={classes.paginationlink}>prev</a>\r\n          </li>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {pageLinks}\r\n        {props.currentPage < props.pages + 1 ? (\r\n          <li\r\n            className={classes.paginationitem}\r\n            onClick={() => props.nextPage(props.currentPage + 1)}\r\n          >\r\n            <a href={() => false} className={classes.paginationlink}>Next</a>\r\n          </li>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default pagination;\r\n"],"sourceRoot":""}